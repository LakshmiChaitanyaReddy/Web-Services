<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>populate</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>true</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>testUIaction</name>
        <onclick>doIt()</onclick>
        <order>100</order>
        <script><![CDATA[function doIt() {
    if (confirm("Are you sure")) {
        //alert("You clicked yes");
        gsftSubmit(null, g_form.getFormElement(), 'populate');
    }
}

if (typeof window == 'undefined')
    updateRecord();

function updateRecord() {


    try {
        var inputs = {};
        inputs['task'] = current; // GlideRecord of table: task 

        // Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
        // sn_fd.FlowAPI.getRunner().subflow('x_1086374_wservice.test_update_task').inBackground().withInputs(inputs).run();

        // Execute Synchronously: Run in foreground. Code snippet has access to outputs.
        var result = sn_fd.FlowAPI.getRunner().subflow('x_1086374_wservice.test_update_task').inForeground().withInputs(inputs).run();
        var outputs = result.getOutputs();

        // Current subflow has no outputs defined.		
    } catch (ex) {
        var message = ex.getMessage();
        gs.error(message);
    }
    action.setRedirectURL(current);


}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-13 16:56:03</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>af848ecc832e5250c4d11a30ceaad30e</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>testUIaction</sys_name>
        <sys_overrides/>
        <sys_package display_value="Web Services" source="x_1086374_wservice">98a8a3d7478342108ab7916a216d437f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Web Services">98a8a3d7478342108ab7916a216d437f</sys_scope>
        <sys_update_name>sys_ui_action_af848ecc832e5250c4d11a30ceaad30e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-13 17:06:30</sys_updated_on>
        <table>incident</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>af848ecc832e5250c4d11a30ceaad30e</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-13 16:56:02</sys_created_on>
        <sys_id>abc48ecc832e5250c4d11a30ceaad3ac</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-13 16:56:02</sys_updated_on>
        <table>sys_ui_action</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
